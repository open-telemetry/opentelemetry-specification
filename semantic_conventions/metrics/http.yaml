groups:
  - id: metric.http.server.duration
    prefix: http
    type: metric
    metric_name: http.server.duration
    brief: "Measures the duration of inbound HTTP requests."
    instrument: histogram
    unit: "ms"
    attributes:
      - ref: http.method
        requirement_level: required
      - ref: http.scheme
        requirement_level: required
      - ref: http.route
        requirement_level:
          conditionally_required: If and only if it's available
      - ref: http.status_code
        requirement_level:
          conditionally_required: If and only if one was received/sent.
      - ref: http.flavor
      - ref: net.host.name
        requirement_level: required
      - ref: net.host.port
        requirement_level:
          conditionally_required: If not default (`80` for `http` scheme, `443` for `https`).

  - id: metric.http.server.active_requests
    prefix: http
    type: metric
    metric_name: http.server.active_requests
    brief: "Measures the number of concurrent HTTP requests that are currently in-flight."
    instrument: updowncounter
    unit: "{requests}"
    attributes:
      - ref: http.method
        requirement_level: required
      - ref: http.scheme
        requirement_level: required
      - ref: http.flavor
      - ref: net.host.name
        requirement_level: required
      - ref: net.host.port
        requirement_level:
          conditionally_required: If not default (`80` for `http` scheme, `443` for `https`).

  - id: metric.http.server.request.size
    prefix: http
    type: metric
    metric_name: http.server.request.size
    brief: "Measures the size of HTTP request messages (compressed)."
    instrument: histogram
    unit: "By"
    # TODO (trask) below attributes are identical to above in metric.http.server.duration
    attributes:
      - ref: http.method
        requirement_level: required
      - ref: http.scheme
        requirement_level: required
      - ref: http.route
        requirement_level:
          conditionally_required: If and only if it's available
      - ref: http.status_code
        requirement_level:
          conditionally_required: If and only if one was received/sent.
      - ref: http.flavor
      - ref: net.host.name
        requirement_level: required
      - ref: net.host.port
        requirement_level:
          conditionally_required: If not default (`80` for `http` scheme, `443` for `https`).

  - id: metric.http.server.response.size
    prefix: http
    type: metric
    metric_name: http.server.response.size
    brief: "Measures the size of HTTP response messages (compressed)."
    instrument: histogram
    unit: "By"
    # TODO (trask) below attributes are identical to above in metric.http.server.duration
    attributes:
      - ref: http.method
        requirement_level: required
      - ref: http.scheme
        requirement_level: required
      - ref: http.route
        requirement_level:
          conditionally_required: If and only if it's available
      - ref: http.status_code
        requirement_level:
          conditionally_required: If and only if one was received/sent.
      - ref: http.flavor
      - ref: net.host.name
        requirement_level: required
      - ref: net.host.port
        requirement_level:
          conditionally_required: If not default (`80` for `http` scheme, `443` for `https`).

  - id: metric.http.client.duration
    prefix: http
    type: metric
    metric_name: http.client.duration
    brief: "Measures the duration of outbound HTTP requests."
    instrument: histogram
    unit: "ms"
    attributes:
      - ref: http.method
        requirement_level: required
      - ref: http.status_code
        requirement_level:
          conditionally_required: If and only if one was received/sent.
      - ref: http.flavor
      - ref: net.peer.name
        requirement_level: required
      - ref: net.peer.port
        requirement_level:
          conditionally_required: If not default (`80` for `http` scheme, `443` for `https`).
      - ref: net.sock.peer.addr

  - id: metric.http.client.request.size
    prefix: http
    type: metric
    metric_name: http.client.request.size
    brief: "Measures the size of HTTP request messages (compressed)."
    instrument: histogram
    unit: "By"
    # TODO (trask) below attributes are identical to above in metric.http.client.duration
    attributes:
      - ref: http.method
        requirement_level: required
      - ref: http.status_code
        requirement_level:
          conditionally_required: If and only if one was received/sent.
      - ref: http.flavor
      - ref: net.peer.name
        requirement_level: required
      - ref: net.peer.port
        requirement_level:
          conditionally_required: If not default (`80` for `http` scheme, `443` for `https`).
      - ref: net.sock.peer.addr

  - id: metric.http.client.response.size
    prefix: http
    type: metric
    metric_name: http.client.response.size
    brief: "Measures the size of HTTP response messages (compressed)."
    instrument: histogram
    unit: "By"
    # TODO (trask) below attributes are identical to above in metric.http.client.duration
    attributes:
      - ref: http.method
        requirement_level: required
      - ref: http.status_code
        requirement_level:
          conditionally_required: If and only if one was received/sent.
      - ref: http.flavor
      - ref: net.peer.name
        requirement_level: required
      - ref: net.peer.port
        requirement_level:
          conditionally_required: If not default (`80` for `http` scheme, `443` for `https`).
      - ref: net.sock.peer.addr
