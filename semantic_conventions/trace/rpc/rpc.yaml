groups:
  - id: rpc
    prefix: rpc
    brief: 'This document defines semantic conventions for remote procedure calls.'
    events: [rpc.message]
    attributes:
      - id: system
        type: string
        required: always
        brief: 'A string identifying the remoting system.'
        examples: ["grpc", "java_rmi", "wcf"]
      - id: service
        type: string
        required:
          conditional: "No, but recommended"
        brief: 'The full (logical) name of the service being called, including its package name, if applicable.'
        note: >
          This is the logical name of the service from the RPC interface perspective,
          which can be different from the name of any implementing class.
          The `code.namespace` attribute may be used to store the latter
          (despite the attribute name, it may include a class name;
          e.g., class with method actually executing the call on the server side,
          RPC client stub class on the client side).
        examples: "myservice.EchoService"
      - id: method
        type: string
        required:
          conditional: "No, but recommended"
        brief: 'The name of the (logical) method being called, must be equal to the $method part in the span name.'
        note: >
          This is the logical name of the method from the RPC interface perspective,
          which can be different from the name of any implementing method/function.
          The `code.function` attribute may be used to store the latter
          (e.g., method actually executing the call on the server side,
          RPC client stub method on the client side).
        examples: "exampleMethod"
      - ref: net.peer.ip
      - ref: net.peer.name
      - ref: net.peer.port
        required:
          conditional: "See below"
      - ref: net.transport
        required:
          conditional: "See below"
    constraints:
      - any_of:
          - net.peer.ip
          - net.peer.name
      - include: network

  - id: rpc.message
    prefix: "message"  # TODO: Change the prefix to rpc.message?
    type: event
    brief: "RPC received/sent message."
    attributes:
      - id: type
        type:
          members:
            - id: sent
              value: "SENT"
            - id: received
              value: "RECEIVED"
        brief: "Whether this is a received or sent message."
      - id: id
        type: int
        brief: "MUST be calculated as two different counters starting from `1` one for sent messages and one for received message."
        note: "This way we guarantee that the values will be consistent between different implementations."
      - id: compressed_size
        type: int
        brief: "Compressed size of the message in bytes."
      - id: uncompressed_size
        type: int
        brief: "Uncompressed size of the message in bytes."
