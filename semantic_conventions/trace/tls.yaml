groups:
  - id: tls
    prefix: tls
    type: span
    brief: "This document defines semantic conventions for TLS/SSL client and server Spans."
    attributes:
      - id: version
        requirement_level: required
        brief: >
          Numeric part of the version parsed from the original string of the
          negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)
        type: string
        examples: ["1.2", "3"]
      - id: version_protocol
        requirement_level: required
        brief: >
          Normalized lowercase protocol name parsed from original string of the
          negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)
        type:
          allow_custom_values: false
          members:
            - id: ssl
              value: ssl
            - id: tls
              value: tls
            - id: unknown
              value: unknown
      - id: cipher
        requirement_level: opt_in
        brief: >
          String indicating the [cipher](https://datatracker.ietf.org/doc/html/rfc5246#appendix-A.5)
          used during the current connection.
        type: string
        examples:
          [
            "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
          ]
      - id: curve
        requirement_level: opt_in
        brief: "String indicating the curve used for the given cipher, when applicable"
        type: string
        examples: ["secp256r1"]
      - id: established
        requirement_level: opt_in
        brief: "Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel."
        type: boolean
        examples: [true]
      - id: next_protocol
        requirement_level: opt_in
        brief: >
          String indicating the protocol being tunneled.
          Per the values in the [IANA registry](https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids),
          this string should be lower case.
        type: string
        examples: ["http/1.1"]
      - id: resumed
        requirement_level: opt_in
        brief: "Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation."
        type: boolean
        examples: [true]
  - id: tls.client
    prefix: tls.client
    type: span
    brief: "The following additional attributes describe the client participating in secure communication."
    attributes:
      - id: certificate
        type: string
        requirement_level: opt_in
        brief: >
          PEM-encoded stand-alone certificate offered by the client.
          This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.
        examples:
          ['MII...']
      - id: certificate_chain
        type: string[]
        requirement_level: opt_in
        brief: >
          Array of PEM-encoded certificates that make up the certificate chain offered by the client.
          This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.
        examples:
          ['MII...', 'MI...']
      - id: issuer
        type: string
        requirement_level: opt_in
        brief: "Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6) of the issuer of the x.509 certificate presented by the client."
        examples:
          ["CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com"]
      - id: ja3
        type: string
        requirement_level: opt_in
        brief: "A hash that identifies clients based on how they perform an SSL/TLS handshake."
        examples: ["d4e5b18d6b55c71272893221c96ba240"]
      - id: not_after
        type: string
        requirement_level: opt_in
        brief: "Date/Time indicating when client certificate is no longer considered valid."
        examples: ["2021-01-01T00:00:00.000Z"]
      - id: not_before
        type: string
        requirement_level: opt_in
        brief: "Date/Time indicating when client certificate is first considered valid."
        examples: ["1970-01-01T00:00:00.000Z"]
      - id: server_name
        type: string
        requirement_level: opt_in
        brief: 'Also called an SNI, this tells the server which hostname to which the client is attempting to connect to.'
        examples: ["opentelemetry.io"]
      - id: subject
        type: string
        requirement_level: opt_in
        brief: "Distinguished name of subject of the x.509 certificate presented by the client."
        examples: ["CN=myclient, OU=Documentation Team, DC=example, DC=com"]
      - id: hash.md5
        type: string
        requirement_level: opt_in
        brief: >
          Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client.
          For consistency with other hash values, this value should be formatted as an uppercase hash.
        examples: ["0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC"]
      - id: hash.sha1
        type: string
        requirement_level: opt_in
        brief: >
          Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client.
          For consistency with other hash values, this value should be formatted as an uppercase hash.
        examples: ["9E393D93138888D288266C2D915214D1D1CCEB2A"]
      - id: hash.sha256
        type: string
        requirement_level: opt_in
        brief: >
          Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client.
          For consistency with other hash values, this value should be formatted as an uppercase hash.
        examples:
          ["0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0"]
  - id: tls.server
    prefix: tls.server
    type: span
    brief: "The following additional attributes describe the server participating in secure communication."
    attributes:
      - id: certificate
        type: string
        requirement_level: opt_in
        brief: >
          PEM-encoded stand-alone certificate offered by the server.
          This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.
        examples:
          ['MII...']
      - id: certificate_chain
        type: string[]
        requirement_level: opt_in
        brief: >
          Array of PEM-encoded certificates that make up the certificate chain offered by the server.
          This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.
        examples:
          ['MII...', 'MI...']
      - id: issuer
        type: string
        requirement_level: opt_in
        brief: "Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6) of the issuer of the x.509 certificate presented by the client."
        examples:
          ["CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com"]
      - id: ja3s
        type: string
        requirement_level: opt_in
        brief: "A hash that identifies servers based on how they perform an SSL/TLS handshake."
        examples: ["d4e5b18d6b55c71272893221c96ba240"]
      - id: not_after
        type: string
        requirement_level: opt_in
        brief: "Date/Time indicating when server certificate is no longer considered valid."
        examples: ["2021-01-01T00:00:00.000Z"]
      - id: not_before
        type: string
        requirement_level: opt_in
        brief: "Date/Time indicating when server certificate is first considered valid."
        examples: ["1970-01-01T00:00:00.000Z"]
      - id: subject
        type: string
        requirement_level: opt_in
        brief: "Distinguished name of subject of the x.509 certificate presented by the server."
        examples: ["CN=myserver, OU=Documentation Team, DC=example, DC=com"]
      - id: hash.md5
        type: string
        requirement_level: opt_in
        brief: >
          Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server.
          For consistency with other hash values, this value should be formatted as an uppercase hash.
        examples: ["0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC"]
      - id: hash.sha1
        type: string
        requirement_level: opt_in
        brief: >
          Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server.
          For consistency with other hash values, this value should be formatted as an uppercase hash.
        examples: ["9E393D93138888D288266C2D915214D1D1CCEB2A"]
      - id: hash.sha256
        type: string
        requirement_level: opt_in
        brief: >
          Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server.
          For consistency with other hash values, this value should be formatted as an uppercase hash.
        examples:
          ["0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0"]
